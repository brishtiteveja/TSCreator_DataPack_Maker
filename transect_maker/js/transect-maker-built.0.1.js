define("baseView",[],function(){var e=Backbone.View.extend({});return e.prototype.wrapString=function(e,t,n,r){n=n||"\n",t=t||75,r=r||!1;if(!e)return e;var i=".{1,"+t+"}(\\s|$)"+(r?"|.{"+t+"}|.+$":"|\\S+?(\\s|$)");return e.match(RegExp(i,"g")).join(n)},e}),define("transectView",["baseView"],function(e){var t=e.extend({tagName:"li",classname:"TransectView",events:{"click .toggle":"toggleTransectForm","click .transect-data":"toggleTransectForm","keypress :input":"updateTransect","keyup :input":"updateTransect",mouseover:"onMouseOver",mouseout:"onMouseOut"}});return t.prototype.template=new EJS({url:"../../../transect_maker/ejs/transect.ejs"}),t.prototype.initialize=function(e){this.transect=e,this.listenTo(this.transect,"change:edit",this.toggleEditStatus.bind(this)),this.render()},t.prototype.render=function(){this.$el.html(this.template.render(this.transect.toJSON())),this.$transectForm=this.$(".transect-form"),this.$transectData=this.$(".transect-data"),this.$destroy=this.$(".destroy"),this.$toggle=this.$(".toggle"),this.$update=this.$(".update"),this.$name=this.$("input[name*=transect-name]")[0],this.$description=this.$("textarea[name*=transect-description]")[0]},t.prototype.toggleTransectForm=function(){this.render(),this.transect.set({edit:!this.transect.get("edit")})},t.prototype.toggleEditStatus=function(){this.transect.get("edit")?(this.$transectForm.removeClass("hide"),this.$transectData.addClass("hide"),this.$toggle.removeClass("hide-data"),this.$toggle.addClass("show-data")):(this.$transectForm.addClass("hide"),this.$transectData.removeClass("hide"),this.$toggle.removeClass("show-data"),this.$toggle.addClass("hide-data"))},t.prototype.onMouseOver=function(){this.$el.addClass("hover"),this.transect.get("wellLeft").set({hover:!0}),this.transect.get("wellRight").set({hover:!0})},t.prototype.onMouseOut=function(){this.$el.removeClass("hover"),this.transect.get("wellLeft").set({hover:!1}),this.transect.get("wellRight").set({hover:!1})},t.prototype.updateTransect=function(e){e.keyCode==13&&this.toggleTransectForm();var t=this.$name.value,n=this.$description.value;this.transect.set({name:t,description:n})},t}),define("baseCollection",[],function(){var e=Backbone.Collection.extend({localStorage:new Backbone.LocalStorage("timescale-creator")});return e}),define("baseModel",[],function(){var e=Backbone.Model.extend({localStorage:new Backbone.LocalStorage("timescale-creator")});return e}),define("settings",["baseModel"],function(e){var t=e.extend({classname:"Settings",constructor:function(t,n){var r=[{fontFamily:t?t.fontFamily:'"Times New Roman", Times, serif',fontVariant:t?t.fontVariant:"normal",fontWeight:t?t.fontWeight:"normal",fontStretch:t?t.fontStretch:"normal",fontSize:t?t.fontSize:"medium",backgroundColor:t&&t.backgroundColor?TscToCssColor(t.backgroundColor):"#DDDDDD",foregroundColor:t&&t.foregroundColor?TscToCssColor(t.foregroundColor):"#000000",strokeWidth:t?t.strokeWidth:3,strokeColor:t?t.strokeColor:"#000000"}];e.apply(this,r)}});return t}),define("transect",["baseModel","settings"],function(e,t){var n=e.extend({classname:"Transect",constructor:function(n,r,i){var s=[{name:n.name||_.uniqueId("Transect-"),id:_.uniqueId("transect-"),description:n.description||null,wellLeft:r,wellRight:i,settings:new t,width:500,status:"on"}];e.apply(this,s)}});return n.prototype.isXInsideTransect=function(e){return this.get("wellLeft").get("x")<=e&&e<this.get("wellRight").get("x")?!0:!1},n.prototype.getRelativeX=function(e){if(this.get("wellLeft").get("x")<=e&&e<this.get("wellRight").get("x")){var t=(e-this.get("wellLeft").get("x"))/(this.get("wellRight").get("x")-this.get("wellLeft").get("x"));return Math.round(t*100)/100}return null},n});var transectApp=transectApp||{};define("transects",["baseCollection","transect"],function(e,t){var n=e.extend({classname:"Transects",model:t});return n.prototype.getTransectForX=function(e){var t=null;return this.each(function(n){n.isXInsideTransect(e)&&(t=n)}),t},n}),define("transectsView",["baseView","transectView","transects"],function(e,t,n){var r=e.extend({el:"#transects-list",classname:"TransectsView"});return r.prototype.template=new EJS({url:"/commons/ejs/data_tbl.ejs"}),r.prototype.initialize=function(){this.transects=transectApp.TransectsCollection,this.render(),this.listenTo(this.transects,"add",this.addTransect.bind(this)),this.listenTo(this.transects,"reset",this.render.bind(this))},r.prototype.render=function(){this.$el.html(this.template.render({name:"Transect"})),this.$transectsTable=this.$(".data-list"),this.transects.each(this.addTransect.bind(this))},r.prototype.addTransect=function(e){var n=new t(e);this.$transectsTable.append(n.el)},r.prototype.resetTransect=function(){this.$transectsTable(""),this.transects.each(this.addTransect,this)},r}),define("transectImageView",["baseView"],function(e){var t=e.extend({el:".container",classname:"TransectImageView"});return t.prototype.initialize=function(e){this.transectImage=e,this.x=e.get("x"),this.y=e.get("y"),this.width=e.get("width"),this.height=e.get("height"),this.url=this.transectImage.get("url"),this.render()},t.prototype.render=function(){this.element===undefined&&(this.element=transectApp.Canvas.image(this.url,this.x,this.y,this.width,this.height),transectApp.transectImage=this.element),transectApp.Canvas.setSize(Math.max(transectApp.Canvas.width,this.width+50),Math.max(transectApp.Canvas.height,this.height+50))},t}),define("transectMarkerView",["baseView"],function(e){var t=e.extend({tagName:"li",classname:"TransectMarkerView",events:{"click .toggle":"toggleMarkerForm","click .marker-data":"toggleMarkerForm","keypress :input":"updateMarker","keyup :input":"updateMarker",mouseover:"onMouseOver",mouseout:"onMouseOut"}});return t.prototype.template=new EJS({url:"/transect_maker/ejs/transect_marker.ejs"}),t.prototype.initialize=function(e,t){this.transectMarkersView=t,this.transectMarker=e,this.render(),this.listenTo(this.transectMarker,"change:edit",this.editTransectMarker.bind(this)),this.listenTo(this.transectMarker,"change:y",this.renderMarker.bind(this)),this.listenTo(this.transectMarker,"change:age",this.renderMarker.bind(this)),this.listenTo(this.transectMarker,"change:name",this.renderMarker.bind(this)),this.listenTo(this.transectMarker,"change:hover",this.setHoverStatus.bind(this))},t.prototype.render=function(){return this.$el.html(this.template.render(this.transectMarker.toJSON())),this.$toggle=this.$(".toggle"),this.$markerForm=this.$(".marker-form"),this.$markerData=this.$(".marker-data"),this.$markerName=this.$('input[name="marker-name"]')[0],this.$markerAge=this.$('input[name="marker-age"]')[0],this.editTransectMarker(),this.renderMarker(),this},t.prototype.renderMarker=function(){this.element===undefined&&(this.element=transectApp.Canvas.path(),this.element.attr({"stroke-width":2,stroke:"#900000"}),this.element.hover(this.onMouseOver.bind(this),this.onMouseOut.bind(this)),this.element.drag(this.dragMove.bind(this),this.dragStart.bind(this),this.dragEnd.bind(this)),this.renderTooltip()),this.element.attr({path:this.getPath()}),transectApp.PointsCollection.updatePoints(),transectApp.TransectTextsCollection.updateTransectTexts()},t.prototype.renderTooltip=function(){$(this.element.node).qtip({content:{text:this.transectMarker.get("name")+"【"+(this.transectMarker.get("age")||"-")+" myr】"},position:{my:"bottom left",target:"mouse"}})},t.prototype.getPath=function(){return"M0,"+this.transectMarker.get("y")+"H"+transectApp.Canvas.width},t.prototype.dragStart=function(e,t,n){},t.prototype.dragMove=function(e,t,n,r,i){transectApp.PointsCollection.updatePoints()&&this.transectMarker.set({y:i.offsetY})},t.prototype.dragEnd=function(e){},t.prototype.onMouseOver=function(){this.transectMarkersView.undelegateEvents(),this.$el.addClass("hover"),this.transectMarker.set({hover:!0})},t.prototype.onMouseOut=function(){this.transectMarkersView.delegateEvents(),this.$el.removeClass("hover"),this.transectMarker.set({hover:!1})},t.prototype.setHoverStatus=function(){this.transectMarker.get("hover")?(this.element.attr({"stroke-width":5}),this.$el.addClass("hover")):(this.element.attr({"stroke-width":2}),this.$el.removeClass("hover"))},t.prototype.toggleMarkerForm=function(){this.render(),this.transectMarker.set({edit:!this.transectMarker.get("edit")})},t.prototype.editTransectMarker=function(){this.transectMarker.get("edit")?(this.$markerForm.removeClass("hide"),this.$markerData.addClass("hide"),this.$toggle.removeClass("hide-data"),this.$toggle.addClass("show-data")):(this.$markerForm.addClass("hide"),this.$markerData.removeClass("hide"),this.$toggle.removeClass("show-data"),this.$toggle.addClass("hide-data"))},t.prototype.updateMarker=function(e){e.keyCode==13&&this.toggleMarkerForm();var t=this.$markerName.value,n=parseFloat(this.$markerAge.value)||0;this.transectMarker.set({name:t,age:n})},t}),define("transectMarker",["baseModel"],function(e){var t=e.extend({classname:"TransectMarker",constructor:function(t,n){var r=[{edit:!1,name:t.name||_.uniqueId("Time Line "),y:t.y,age:null,hover:!1}];e.apply(this,r)}});return t}),define("zone",["baseModel"],function(e){var t=e.extend({classname:"Zone",constructor:function(t,n,r){var i=[{edit:!1,name:t.name||_.uniqueId("Zone "),description:t.description||null,topMarker:n,baseMarker:r}];e.apply(this,i)}});return t.prototype.isYInsideZone=function(e){return this.get("topMarker").get("y")<=e&&e<this.get("baseMarker").get("y")?!0:!1},t.prototype.getRelativeY=function(e){if(this.get("topMarker").get("y")<=e&&e<this.get("baseMarker").get("y")){var t=(e-this.get("topMarker").get("y"))/(this.get("baseMarker").get("y")-this.get("topMarker").get("y"));return Math.round(t*100)/100}return null},t.prototype.getAbsoluteAge=function(e){if(this.get("topMarker").get("y")<=e&&e<this.get("baseMarker").get("y")&&this.get("topMarker").get("age")!=null&&this.get("baseMarker").get("age")!=null){var t=(e-this.get("topMarker").get("y"))/(this.get("baseMarker").get("y")-this.get("topMarker").get("y"));return age=t*(this.get("baseMarker").get("age")-this.get("topMarker").get("age"))+this.get("topMarker").get("age"),Math.round(age*100)/100}return null},t}),define("transectMarkersView",["baseView","transectMarkerView","transectMarker","zone"],function(e,t,n,r){var i=e.extend({el:"#markers-list",classname:"TransectMarkersView"});return i.prototype.template=new EJS({url:"../../../commons/ejs/data_tbl.ejs"}),i.prototype.initialize=function(){this.transectZones=transectApp.ZonesCollection,this.transectMarkers=transectApp.TransectMarkersCollection,this.enMarkers=!1,this.listenTo(this.transectMarkers,"add",this.render.bind(this)),this.listenToActionEvents(),this.render()},i.prototype.listenToActionEvents=function(){$("#canvas").bind("dblclick",this.createMarker.bind(this))},i.prototype.render=function(){this.$el.html(this.template.render({name:"Markers"})),this.$markersTable=this.$(".data-list"),this.renderMarkers()},i.prototype.renderMarkers=function(){this.set===undefined&&(this.set=transectApp.Canvas.set()),this.transectMarkers.each(this.addMarker.bind(this))},i.prototype.addMarker=function(e){var n=new t(e,this);this.$markersTable.append(n.el),this.set.push(n.element),this.updateZones(),transectApp.PointsCollection.updatePoints(),transectApp.TransectTextsCollection.updateTransectTexts()},i.prototype.toggleMarkers=function(e){$("a[href='#add-marker']").parent().hasClass("active")?($("a[href='#add-marker']").parent().removeClass("active"),this.enMarkers=!1):($("a[href='#add-marker']").parent().addClass("active"),this.enMarkers=!0)},i.prototype.createMarker=function(e){this.enMarkers&&this.transectMarkers.add(new n({y:e.offsetY}))},i.prototype.updateZones=function(){var e=[];this.transectMarkers.each(function(t,n,i){n>0&&e.push(new r({name:"Zone "+n},i[n-1],t))}),this.transectZones.reset(e)},i}),define("transectWellView",["baseView"],function(e){var t=e.extend({tagName:"li",classname:"TransectWellView",events:{"click .toggle":"toggleWellForm","click .well-data":"toggleWellForm","keypress :input":"updateWell","keyup :input":"updateWell",mouseover:"onMouseOver",mouseout:"onMouseOut"}});return t.prototype.template=new EJS({url:"../../../transect_maker/ejs/transect_well.ejs"}),t.prototype.initialize=function(e,t){this.transectWell=e,this.transectWellsView=t,this.render(),this.listenTo(this.transectWell,"change:edit",this.editTransectWell.bind(this)),this.listenTo(this.transectWell,"change:x",this.renderWell.bind(this)),this.listenTo(this.transectWell,"change:name",this.renderWell.bind(this)),this.listenTo(this.transectWell,"change:lat",this.renderWell.bind(this)),this.listenTo(this.transectWell,"change:lon",this.renderWell.bind(this)),this.listenTo(this.transectWell,"change:hover",this.setHoverStatus.bind(this))},t.prototype.render=function(){this.$el.html(this.template.render(this.transectWell.toJSON())),this.$toggle=this.$(".toggle"),this.$wellForm=this.$(".well-form"),this.$wellData=this.$(".well-data"),this.$wellName=this.$('input[name="well-name"]')[0],this.$wellLat=this.$('input[name="well-lat"]')[0],this.$wellLon=this.$('input[name="well-lon"]')[0],this.editTransectWell(),this.renderWell()},t.prototype.renderWell=function(){this.element===undefined&&(this.element=transectApp.Canvas.path(),this.element.attr({"stroke-width":2,stroke:"#900000"}),this.element.hover(this.onMouseOver.bind(this),this.onMouseOut.bind(this)),this.element.drag(this.dragMove.bind(this),this.dragStart.bind(this),this.dragEnd.bind(this)),this.renderTooltip()),this.element.attr({path:this.getPath()})},t.prototype.renderTooltip=function(){$(this.element.node).qtip({content:{text:this.transectWell.get("name")},position:{my:"left bottom",at:"left middle",target:"mouse"}})},t.prototype.getPath=function(){return"M"+this.transectWell.get("x")+",0"+"V"+transectApp.Canvas.height},t.prototype.dragStart=function(e,t,n){},t.prototype.dragMove=function(e,t,n,r,i){transectApp.PointsCollection.updatePoints()&&this.transectWell.set({x:i.offsetX})},t.prototype.dragEnd=function(e){},t.prototype.onMouseOver=function(){this.transectWellsView.undelegateEvents(),this.transectWell.set({hover:!0})},t.prototype.onMouseOut=function(){this.transectWellsView.delegateEvents(),this.transectWell.set({hover:!1})},t.prototype.setHoverStatus=function(){this.transectWell.get("hover")?(this.element.attr({"stroke-width":5}),this.$el.addClass("hover")):(this.element.attr({"stroke-width":2}),this.$el.removeClass("hover"))},t.prototype.toggleWellForm=function(){this.render(),this.transectWell.set({edit:!this.transectWell.get("edit")})},t.prototype.editTransectWell=function(){this.transectWell.get("edit")?(this.$wellForm.removeClass("hide"),this.$wellData.addClass("hide"),this.$toggle.removeClass("hide-data"),this.$toggle.addClass("show-data")):(this.$wellForm.addClass("hide"),this.$wellData.removeClass("hide"),this.$toggle.removeClass("show-data"),this.$toggle.addClass("hide-data"))},t.prototype.updateWell=function(e){e.keyCode==13&&this.toggleWellForm();var t=this.$wellName.value,n=parseFloat(this.$wellLat.value),r=parseFloat(this.$wellLon.value);this.transectWell.set({name:t,lat:n,lon:r})},t}),define("transectWell",["baseModel","settings"],function(e,t){var n=e.extend({classname:"TransectWell",constructor:function(n,r){var i=[{edit:!1,name:n.name||_.uniqueId("Well "),id:_.uniqueId("well-"),x:n.x,lat:null,lon:null,settings:new t,width:100,hover:!1}];e.apply(this,i)}});return n}),define("transectWellsView",["baseView","transectWellView","transectWell","transect"],function(e,t,n,r){var i=e.extend({el:"#wells-list",classname:"TransectWellsView"});return i.prototype.template=new EJS({url:"../../../commons/ejs/data_tbl.ejs"}),i.prototype.initialize=function(){this.transectWells=transectApp.TransectWellsCollection,this.enWells=!1,this.render(),this.listenToActionEvents(),this.listenTo(this.transectWells,"add",this.addWell.bind(this))},i.prototype.render=function(){this.$el.html(this.template.render({name:"Reference Wells"})),this.$wellsTable=this.$(".data-list"),this.renderWells()},i.prototype.listenToActionEvents=function(){$("#canvas").bind("dblclick",this.createWell.bind(this))},i.prototype.renderWells=function(){this.set===undefined&&(this.set=transectApp.Canvas.set()),this.transectWells.each(this.addWell.bind(this))},i.prototype.addWell=function(e){var n=new t(e,this);this.$wellsTable.append(n.el),this.set.push(n.element),this.updateTransects(),transectApp.PointsCollection.updatePoints(),transectApp.TransectTextsCollection.updateTransectTexts()},i.prototype.toggleWells=function(e){$("a[href='#add-well']").parent().hasClass("active")?($("a[href='#add-well']").parent().removeClass("active"),this.enWells=!1):($("a[href='#add-well']").parent().addClass("active"),this.enWells=!0)},i.prototype.createWell=function(e){this.enWells&&this.transectWells.add(new n({x:e.offsetX}))},i.prototype.wellAdded=function(){this.render()},i.prototype.updateTransects=function(){var e=[];this.transectWells.each(function(t,n,i){n>0&&e.push(new r({name:"Transect "+n},i[n-1],t))}),transectApp.TransectsCollection.reset(e)},i}),define("transectTextView",["baseView"],function(e){var t=e.extend({tagName:"li",classname:"TransectTextView",events:{"click .toggle":"toggleTextForm","click .text-data":"toggleTextForm","keypress :input":"updateText","keyup :input":"updateText",mouseover:"onMouseOver",mouseout:"onMouseOut"}});return t.prototype.template=new EJS({url:"/transect_maker/ejs/transect_text.ejs"}),t.prototype.initialize=function(e,t){this.transectTextsView=t,this.transectText=e,this.render(),this.listenTo(this.transectText,"change:x",this.renderTransectText.bind(this)),this.listenTo(this.transectText,"change:y",this.renderTransectText.bind(this)),this.listenTo(this.transectText,"change:edit",this.editTransectText.bind(this)),this.listenTo(this.transectText,"change:text",this.renderTransectText.bind(this))},t.prototype.render=function(){return this.$el.html(this.template.render(this.transectText.toJSON())),this.$toggle=this.$(".toggle"),this.$textForm=this.$(".text-form"),this.$textData=this.$(".text-data"),this.$textText=this.$('input[name="text-name"]')[0],this.editTransectText(),this.renderTransectText(),this},t.prototype.renderTransectText=function(){if(this.element===undefined||this.boundingBox===undefined)this.backgroundBox=transectApp.Canvas.rect(),this.element=transectApp.Canvas.text(),this.boundingBox=transectApp.Canvas.rect(),this.boundingBox.attr({fill:"#fff","fill-opacity":0,r:"2px"}),this.element.attr({"font-size":16,"stroke-width":1}),this.backgroundBox.attr({fill:"#fff","fill-opacity":1,r:"2px"}),this.boundingBox.hover(this.onMouseOver.bind(this),this.onMouseOut.bind(this)),this.boundingBox.drag(this.dragMove.bind(this),this.dragStart.bind(this),this.dragEnd.bind(this));this.element.attr({text:this.transectText.get("text"),x:this.transectText.get("x"),y:this.transectText.get("y")}),this.backgroundBox.attr({width:this.element.getBBox().width,height:this.element.getBBox().height,x:this.element.getBBox().x,y:this.element.getBBox().y}),this.boundingBox.attr({width:this.element.getBBox().width,height:this.element.getBBox().height,x:this.element.getBBox().x,y:this.element.getBBox().y}),this.renderTooltip()},t.prototype.renderTooltip=function(){var e=this.transectText.get("text")+"<br/>";e+=this.transectText.get("zone").get("name")+"<br/>",e+=this.transectText.get("transect").get("name"),$(this.boundingBox.node).qtip({content:{text:e},position:{my:"bottom left",target:"mouse"}})},t.prototype.dragStart=function(e,t,n){},t.prototype.dragMove=function(e,t,n,r,i){var s=transectApp.TransectsCollection.getTransectForX(i.offsetX),o=transectApp.ZonesCollection.getZoneForY(i.offsetY);s!==null&&o!==null&&(this.transectText.set({x:i.offsetX,y:i.offsetY}),this.transectText.updateTransectAndZone())},t.prototype.dragEnd=function(e){},t.prototype.onMouseOver=function(){this.transectTextsView.undelegateEvents(),this.backgroundBox.attr({fill:"#fdcc59"}),this.$el.addClass("hover")},t.prototype.onMouseOut=function(){this.transectTextsView.delegateEvents(),this.backgroundBox.attr({fill:"fff"}),this.$el.removeClass("hover")},t.prototype.toggleTextForm=function(){this.render(),this.transectText.set({edit:!this.transectText.get("edit")})},t.prototype.editTransectText=function(){this.transectText.get("edit")?(this.$textForm.removeClass("hide"),this.$textData.addClass("hide"),this.$toggle.removeClass("hide-data"),this.$toggle.addClass("show-data")):(this.$textForm.addClass("hide"),this.$textData.removeClass("hide"),this.$toggle.removeClass("show-data"),this.$toggle.addClass("hide-data"))},t.prototype.updateText=function(e){e.keyCode==13&&this.toggleTextForm();var t=this.$textText.value;this.transectText.set({text:t})},t}),define("transectTextsView",["baseView","transectTextView"],function(e,t){var n=e.extend({el:"#texts-list",classname:"TransectTextsView"});return n.prototype.template=new EJS({url:"../../../commons/ejs/data_tbl.ejs"}),n.prototype.initialize=function(){this.transectTexts=transectApp.TransectTextsCollection,this.enTransectTexts=!1,this.render(),this.listenToActionEvents(),this.listenTo(this.transectTexts,"add",this.render.bind(this))},n.prototype.render=function(){this.$el.html(this.template.render({name:"Transect Texts"})),this.$textsList=this.$(".data-list"),this.renderTransectTexts()},n.prototype.renderTransectTexts=function(){this.set==undefined&&(this.set=transectApp.Canvas.set()),this.transectTexts.each(this.addTransectText.bind(this))},n.prototype.listenToActionEvents=function(){$("#canvas").bind("dblclick",this.createTransectText.bind(this))},n.prototype.addTransectText=function(e){var n=new t(e,this);this.$textsList.append(n.el),this.set.push(n.element)},n.prototype.createTransectText=function(e){if(this.enTransectTexts){var t=transectApp.TransectTextsCollection.findWhere({x:e.offsetX,y:e.offsetY})||new Point({x:e.offsetX,y:e.offsetY});if(t.get("transect")===null||t.get("zone")===null){t.destroy();return}this.transectTexts.add(new TransectText({x:e.offsetX,y:e.offsetY}))}},n.prototype.toggleTransectTexts=function(){$("a[href='#add-transect-text']").parent().hasClass("active")?($("a[href='#add-transect-text']").parent().removeClass("active"),this.enTransectTexts=!1):($("a[href='#add-transect-text']").parent().addClass("active"),this.enTransectTexts=!0)},n}),define("zoneView",["baseView"],function(e){var t=e.extend({tagName:"li",classname:"ZoneView",events:{"click .toggle":"toggleZoneForm","click .zone-data":"toggleZoneForm","keypress :input":"updateZone","keyup :input":"updateZone",mouseover:"onMouseOver",mouseout:"onMouseOut"}});return t.prototype.template=new EJS({url:"../../../transect_maker/ejs/zone.ejs"}),t.prototype.initialize=function(e){this.zone=e,this.listenTo(this.zone,"change:edit",this.toggleEditStatus.bind(this)),this.render()},t.prototype.render=function(){this.$el.html(this.template.render(this.zone.toJSON())),this.$toggle=this.$(".toggle"),this.$zoneForm=this.$(".zone-form"),this.$zoneData=this.$(".zone-data"),this.$zoneName=this.$('input[name="zone-name"]')[0],this.$zoneDescription=this.$('textarea[name="zone-description"]')[0]},t.prototype.toggleZoneForm=function(){this.render(),this.zone.set({edit:!this.zone.get("edit")})},t.prototype.toggleEditStatus=function(){this.zone.get("edit")?(this.$zoneForm.removeClass("hide"),this.$zoneData.addClass("hide"),this.$toggle.removeClass("hide-data"),this.$toggle.addClass("show-data")):(this.$zoneForm.addClass("hide"),this.$zoneData.removeClass("hide"),this.$toggle.removeClass("show-data"),this.$toggle.addClass("hide-data"))},t.prototype.onMouseOver=function(){this.$el.addClass("hover"),this.zone.get("topMarker").set({hover:!0}),this.zone.get("baseMarker").set({hover:!0})},t.prototype.onMouseOut=function(){this.$el.removeClass("hover"),this.zone.get("topMarker").set({hover:!1}),this.zone.get("baseMarker").set({hover:!1})},t.prototype.updateZone=function(e){e.keyCode==13&&this.toggleZoneForm();var t=this.$zoneName.value,n=this.$zoneDescription.value;this.zone.set({name:t,description:n})},t}),define("zonesView",["baseView","zoneView","zone"],function(e,t,n){var r=e.extend({el:"#zones-list",classname:"ZonesView"});return r.prototype.template=new EJS({url:"../../../commons/ejs/data_tbl.ejs"}),r.prototype.initialize=function(){this.zones=transectApp.ZonesCollection,this.render(),this.listenTo(this.zones,"add",this.addZone.bind(this)),this.listenTo(this.zones,"reset",this.resetZones.bind(this))},r.prototype.render=function(){this.$el.html(this.template.render({name:"Zones"})),this.$zonesTable=this.$(".data-list")},r.prototype.addZone=function(e){var n=new t(e);this.$zonesTable.append(n.el)},r.prototype.resetZones=function(){this.$zonesTable.html(""),this.zones.each(this.addZone,this)},r}),define("pointView",["baseView"],function(e){var t=e.extend({tagName:"li",classname:"PointView",events:{"click .toggle":"togglePointForm",mouseover:"onMouseOver",mouseout:"onMouseOut"}});return t.prototype.template=new EJS({url:"/transect_maker/ejs/point.ejs"}),t.prototype.statusBoxTemplate=new EJS({url:"/transect_maker/ejs/status_box.ejs"}),t.prototype.initialize=function(e){this.point=e,this.render(),this.listenTo(this.point,"destroy",this.removeElement.bind(this)),this.listenTo(this.point,"change:edit",this.toggleEditStatus.bind(this)),this.listenTo(this.point,"change",this.render.bind(this))},t.prototype.render=function(){this.$el.html(this.template.render(this.point.toJSON())),this.$toggle=this.$(".toggle"),this.$pointForm=this.$(".point-form"),this.$pointData=this.$(".point-data"),this.$pointName=this.$('input[name="point-name"]')[0],this.$pointAge=this.$('input[name="point-age"]')[0],this.renderPoint()},t.prototype.renderPoint=function(){this.element===undefined&&(this.element=transectApp.Canvas.circle(this.point.get("x"),this.point.get("y"),4),PointsSet.push(this.element),this.element.hover(this.onMouseOver.bind(this),this.onMouseOut.bind(this)),this.element.click(this.onClick.bind(this)),this.element.drag(this.onDragMove.bind(this),this.onDragStart.bind(this),this.onDragEnd.bind(this)),this.renderTooltip(),this.element.attr({fill:"#000000"})),this.updateStatusBox(),this.updateElement()},t.prototype.renderTooltip=function(){var e=this.point.get("name")+"<br/>";e+=this.point.get("zone").get("name")+"<br/>",e+=this.point.get("transect").get("name"),$(this.element.node).qtip({content:{text:e},position:{my:"bottom left",target:"mouse"}})},t.prototype.updateElement=function(){this.element.attr({cx:this.point.get("x"),cy:this.point.get("y")}),this.renderTooltip(),this.updateStatusBox()},t.prototype.updateStatusBox=function(){transectApp.StatusBox.html(this.statusBoxTemplate.render(this.point.toJSON()))},t.prototype.setFinishedMode=function(){this.element.attr({r:4,fill:"#000000",stroke:"#000000"}),this.$el.removeClass("hover")},t.prototype.setEditMode=function(){this.element.attr({r:8,fill:"#FF0033",stroke:"#FF0033"}),this.$el.addClass("hover")},t.prototype.onMouseOver=function(){this.setEditMode()},t.prototype.onMouseOut=function(){this.setFinishedMode()},t.prototype.onClick=function(){transectApp.CurrentPolygon!==null&&transectApp.CurrentPolygon.get("points").add(this.point)},t.prototype.removeElement=function(){this.element.remove()},t.prototype.onDragStart=function(e,t,n){},t.prototype.onDragMove=function(e,t,n,r,i){var s=transectApp.TransectsCollection.getTransectForX(i.offsetX),o=transectApp.ZonesCollection.getZoneForY(i.offsetY);s!==null&&o!==null&&(this.point.set({x:i.offsetX,y:i.offsetY}),this.point.updateTransectAndZone())},t.prototype.onDragEnd=function(e){},t.prototype.togglePointForm=function(){this.point.set({edit:!this.point.get("edit")})},t.prototype.toggleEditStatus=function(){this.point.get("edit")?(this.$pointForm.removeClass("hide"),this.$pointData.addClass("hide"),this.$toggle.removeClass("hide-data"),this.$toggle.addClass("show-data"),this.setEditMode()):(this.$pointForm.addClass("hide"),this.$pointData.removeClass("hide"),this.$toggle.removeClass("show-data"),this.$toggle.addClass("hide-data"),this.setFinishedMode())},t}),define("lineView",["baseView"],function(e){var t=e.extend({tagName:"li",classname:"LineView",events:{"click .line-data":"toggleLineForm","keypress :input":"updateLine","keyup :input":"updateLine",mouseover:"onMouseOver",mouseout:"onMouseOut"}});return t.prototype.template=new EJS({url:"../../../transect_maker/ejs/line.ejs"}),t.prototype.initialize=function(e){this.line=e,this.listenTo(this.line,"destroy",this.removeElement.bind(this)),this.listenTo(this.line,"change:edit",this.toggleEditStatus.bind(this)),this.listenTo(this.line,"change:name",this.renderLine.bind(this)),this.listenTo(this.line.get("point1"),"change",this.renderLine.bind(this)),this.listenTo(this.line.get("point2"),"change",this.renderLine.bind(this)),this.listenTo(this.line,"change:pattern",this.render.bind(this)),this.render()},t.prototype.render=function(){this.$el.html(this.template.render(this.line.toJSON())),this.$toggle=this.$(".toggle"),this.$lineForm=this.$(".line-form"),this.$lineData=this.$(".line-data"),this.$lineName=this.$('input[name="line-name"]')[0],this.$linePattern=this.$("select.line-pattern"),this.$linePattern.change(this.updateLine.bind(this)),this.renderLine()},t.prototype.renderLine=function(){this.element===undefined&&(this.element=transectApp.Canvas.path());var e="M"+this.line.get("point1").get("x")+","+this.line.get("point1").get("y");e+=this.line.getPath(),this.element.attr({path:e}),this.element.hover(this.onMouseOver.bind(this),this.onMouseOut.bind(this)),this.setFinishedMode(),this.renderTooltip()},t.prototype.renderTooltip=function(){var e=this.line.get("name");$(this.element.node).qtip({content:{text:e},position:{my:"bottom left",target:"mouse"}})},t.prototype.onMouseOut=function(){this.setFinishedMode()},t.prototype.onMouseOver=function(){this.setEditMode()},t.prototype.removeElement=function(){this.remove(),this.element.remove()},t.prototype.toggleLineForm=function(){this.render(),this.line.set({edit:!this.line.get("edit")})},t.prototype.toggleEditStatus=function(){this.line.get("edit")?(this.$lineForm.removeClass("hide"),this.$lineData.addClass("hide"),this.$toggle.removeClass("hide-data"),this.$toggle.addClass("show-data")):(this.$lineForm.addClass("hide"),this.$lineData.removeClass("hide"),this.$toggle.removeClass("show-data"),this.$toggle.addClass("hide-data"))},t.prototype.setFinishedMode=function(){this.element.attr({"stroke-width":2,stroke:transectApp.lineMouseOut}),this.$el.removeClass("hover")},t.prototype.setEditMode=function(){this.element.attr({"stroke-width":6,stroke:transectApp.lineMouseOver}),this.$el.addClass("hover")},t.prototype.updateLine=function(e){e.keyCode==13&&this.toggleLineForm();var t=this.$lineName.value,n=this.$("select.line-pattern option:selected").val();this.line.set({name:t,pattern:n})},t}),define("point",["baseModel"],function(e){var t=e.extend({classname:"Point",constructor:function(t,n){var r=[{edit:!1,name:t.name||_.uniqueId("X"),x:t.x?parseInt(t.x):0,y:t.y?parseInt(t.y):0,age:0,relativeX:null,relativeY:null,relativeAge:null,transect:null,zone:null}];e.apply(this,r)}});return t.prototype.initialize=function(){this.updateTransectAndZone()},t.prototype.updateTransectAndZone=function(){var e=transectApp.ZonesCollection.getZoneForY(this.get("y")),t=transectApp.TransectsCollection.getTransectForX(this.get("x"));e!==null&&t!==null&&(this.set({transect:t,zone:e}),this.updateRelativeCoordinates())},t.prototype.updateRelativeCoordinates=function(){this.set({relativeX:this.get("transect").getRelativeX(this.get("x")),relativeY:this.get("zone").getRelativeY(this.get("y")),age:this.get("zone").getAbsoluteAge(this.get("y"))})},t}),define("points",["baseCollection","point"],function(e,t){var n=e.extend({classname:"Points",model:t});return n.prototype.updatePoints=function(){return this.each(function(e){e.updateTransectAndZone()}),!0},n.prototype.add=function(t){if(t===undefined)return;var n=this.any(function(e){return e.get("x")==t.get("x")&&e.get("y")==t.get("y")});n||e.prototype.add.call(this,t)},n.prototype.getPolyKPointsArray=function(){var e=[];return this.each(function(t){e.push(t.get("x")),e.push(t.get("y"))}),e},n}),define("lines",["baseCollection","line"],function(e,t){var n=e.extend({classname:"Lines",model:t});return n.prototype.findLineForPoints=function(e){var t=transectApp.PointsCollection.findWhere({x:e.x1,y:e.y1}),n=transectApp.PointsCollection.findWhere({x:e.x2,y:e.y2});return this.findWhere({point1:t,point2:n})},n}),define("polygon",["baseModel","points","lines"],function(e,t,n){var r=e.extend({classname:"Polygon",constructor:function(r,i){var s=[{edit:!1,draw:!1,name:r&&r.name?r.name:_.uniqueId("Polygon "),patternName:r?r.patternName:null,points:new t,lines:new n}];e.apply(this,s)}});return r.prototype.getPolyKPointsArray=function(e){var t=[];return this.get("points").each(function(e){t.push(e.get("x")),t.push(e.get("y"))}),t},r}),define("polygons",["baseCollection","polygon"],function(e,t){var n=e.extend({classname:"Polygons",model:t});return n}),define("line",["baseModel","transects","polygons"],function(e,t,n){var r=e.extend({classname:"Line",constructor:function(r,i,s){var o=[{edit:!1,name:r.name||_.uniqueId("Line "),pattern:"default",point1:i,point2:s,transects:new t,polygons:new n}];e.apply(this,o)}});return r.prototype.jaggedDistance=10,r.prototype.waveHeight=5,r.prototype.getPatternPoints=function(){var e=numeric.linspace(this.point1.get("x"),this.point2.get("x"),steps),t=numeric.linspace(this.point1.get("y"),this.point2.get("y"),steps)},r.prototype.getPolyKPointsArray=function(){var e=[];return e.push(this.get("point1").get("x")),e.push(this.get("point1").get("y")),e.push(this.get("point2").get("x")),e.push(this.get("point2").get("y")),e},r.prototype.slope=function(){var e=(this.get("point1").get("y")-this.get("point2").get("y"))/(this.get("point1").get("x")-this.get("point2").get("x"));return e},r.prototype.coincides=function(e){var t=e.getPolyKPointsArray(),n=this.getPolyKPointsArray(),r=[],i=3;return r.push(this.pointAtADistanceFromXY(n[0],n[1],i)),r.push(this.pointAtADistanceFromXY(n[0],n[1],-i)),r.push(this.pointAtADistanceFromXY(n[2],n[3],-i)),r.push(this.pointAtADistanceFromXY(n[2],n[3],i)),r=_.flatten(r),PolyK.ContainsPoint(r,t[0],t[1])&&PolyK.ContainsPoint(r,t[2],t[3])?!0:!1},r.prototype.getPath=function(){return this.getPathFromPattern(this.get("pattern"))},r.prototype.getPathFromPattern=function(e){switch(e){case"default":return this.getStraightPath();case"jagged":return this.getJaggedPath();case"wavy":return this.getWavyPath();case"lapping":return this.getJaggedPath()}},r.prototype.getStraightPath=function(){var e=",L"+this.get("point2").get("x")+","+this.get("point2").get("y");return e},r.prototype.getJaggedPath=function(){var e=this.get("point1").get("y")-this.get("point2").get("y"),t=this.get("point1").get("x")-this.get("point2").get("x"),n=e/t,r=Math.round(Math.abs(this.get("point1").get("y")-this.get("point2").get("y"))/10),i=numeric.linspace(this.get("point1").get("x"),this.get("point2").get("x"),r),s=numeric.linspace(this.get("point1").get("y"),this.get("point2").get("y"),r),o="";if(i.length==0)return this.getStraightPath();for(var u=0;u<i.length;u++)u!=0&&(e>0&&n>0||e<0&&n<0?(o+=",L"+(i[u-1]+this.jaggedDistance)+","+s[u-1],o+=",L"+(i[u]-this.jaggedDistance)+","+s[u],u<i.length-1?o+=",L"+(i[u]+this.jaggedDistance)+","+s[u]:o+=",L"+i[u]+","+s[u]):(o+=",L"+(i[u-1]-this.jaggedDistance)+","+s[u-1],o+=",L"+(i[u]+this.jaggedDistance)+","+s[u],u<i.length-1?o+=",L"+(i[u]-this.jaggedDistance)+","+s[u]:o+=",L"+i[u]+","+s[u]));return o},r.prototype.getWavyPath=function(){var e=Math.round(Math.abs(this.get("point1").get("y")-this.get("point2").get("y"))/3),t=Math.round(Math.abs(this.get("point1").get("x")-this.get("point2").get("x"))/3),n=Math.max(t,e),r=numeric.linspace(this.get("point1").get("x"),this.get("point2").get("x"),n),i=numeric.linspace(this.get("point1").get("y"),this.get("point2").get("y"),n),s="";if(n==0)return this.getStraightPath();for(var o=0;o<n;o++){var u=r.length>0?r[o]:this.get("point1").get("x"),a=i.length>0?i[o]:this.get("point1").get("y");o!=0&&(o%2==1?(o%4==3?plPoint=this.pointAtADistanceFromXY(u,a,-this.waveHeight):plPoint=this.pointAtADistanceFromXY(u,a,this.waveHeight),s+=",S"+plPoint[0]+","+plPoint[1]):s+=","+u+","+a)}return s+=",L"+this.get("point2").get("x")+","+this.get("point2").get("y"),s},r.prototype.pointAtADistanceFromXY=function(e,t,n){var r=(this.get("point1").get("x")-this.get("point2").get("x"))/(this.get("point2").get("y")-this.get("point1").get("y")),i,s;return r===Infinity||r===-Infinity?(i=e,s=t+n):(i=e+n/Math.sqrt(1+r*r),s=t+r*(i-e)),[i,s]},r}),define("polygonView",["baseView","pointView","lineView","point","points","line","lines"],function(e,t,n,r,i,s,o){var u=e.extend({tagName:"li",classname:"PolygonView",events:{"click .toggle-polygon":"togglePolygonForm","click .polygon-data":"togglePolygonForm","click a.polygon-list-tool":"showList","click .destroy":"destroy","keypress :input":"updatePolygon","keyup :input":"updatePolygon","click label.polygon-line-data":"showPolygonLinesList","click label.polygon-point-data":"showPolygonPointsList","click label.polygon-pattern-data":"showPolygonPatternsList",mouseover:"onMouseOver",mouseout:"onMouseOut"}});return u.prototype.template=new EJS({url:"/transect_maker/ejs/polygon.ejs"}),u.prototype.initialize=function(e){this.polygon=e,this.pointsSet=transectApp.Canvas.set(),this.linesSet=transectApp.Canvas.set(),this.render(),this.listenToActionEvents(),this.listenTo(this.polygon,"change:edit",this.toggleEditStatus.bind(this)),this.listenTo(this.polygon,"change:draw",this.setRenderMode.bind(this)),this.listenTo(this.polygon,"change:name",this.updatePolygonView.bind(this)),this.listenTo(this.polygon,"change:patternName",this.updatePolygonView.bind(this)),this.listenTo(this.polygon.get("points"),"change",this.renderPolygonElement.bind(this)),this.listenTo(this.polygon.get("lines"),"change",this.renderPolygonElement.bind(this)),this.listenTo(this.polygon.get("points"),"add",this.addPointToPolygon.bind(this)),this.listenTo(this.polygon.get("points"),"reset",this.resetPolygonPoints.bind(this)),this.listenTo(this.polygon.get("lines"),"add",this.addLineToPolygon.bind(this)),this.listenTo(this.polygon.get("lines"),"reset",this.resetPolygonLines.bind(this)),this.listenTo(this.polygon.get("lines"),"remove",this.updatePolygonLines.bind(this)),this.listenTo(this.polygon,"destroy",this.delete.bind(this))},u.prototype.updatePolygonLines=function(){},u.prototype.updatePolygonView=function(e){this.$polygonData.html(this.polygon.get("name")+" → "+this.polygon.get("patternName")),this.renderPolygonElement(),this.setPolygonFill(),this.toggleEditStatus()},u.prototype.render=function(){this.$el.html(this.template.render(this.polygon.toJSON())),this.$togglePolygon=this.$(".toggle-polygon"),this.$polygonForm=this.$(".polygon-form"),this.$polygonData=this.$(".polygon-data"),this.$polygonName=this.$('input[name="polygon-name"]')[0],this.$linesList=this.$(".lines-list"),this.$pointsList=this.$(".points-list"),this.$patternsList=this.$(".patterns-list"),this.$polygonPattern=this.$("select.polygon-pattern"),this.$patternImage=this.$(".patterns-image"),this.$polygonPattern.change(this.updatePolygonPattern.bind(this)),this.renderPoints()},u.prototype.renderPoints=function(){this.polygon.get("points").each(this.addPoint.bind(this))},u.prototype.showPolygonLinesList=function(){this.$linesList.hasClass("hide")?this.$linesList.removeClass("hide"):this.$linesList.addClass("hide")},u.prototype.showPolygonPointsList=function(){this.$pointsList.hasClass("hide")?this.$pointsList.removeClass("hide"):this.$pointsList.addClass("hide")},u.prototype.showPolygonPatternsList=function(){this.$patternsList.hasClass("hide")?this.$patternsList.removeClass("hide"):this.$patternsList.addClass("hide")},u.prototype.updatePolygonPattern=function(){var e=this.$("select.polygon-pattern option:selected").val();this.polygon.set({patternName:e})},u.prototype.listenToActionEvents=function(){$("#canvas").bind("dblclick",this.addPoint.bind(this))},u.prototype.addPointToPolygon=function(e){var n=new t(e);this.$pointsList.append(n.el),this.pointsSet.push(n.element),this.polygon.get("points").length>1&&this.resetLines(),transectApp.PointsCollection.add(e),this.updateCanvasDimensions(e)},u.prototype.isSimple=function(e){var t=this.polygon.getPointsArray();return t.push(e.get("x")),t.push(e.get("y")),PolyK.IsSimple(t)},u.prototype.updateCanvasDimensions=function(e){transectApp.Canvas.setSize(Math.max(transectApp.Canvas.width,e.get("x")),Math.max(transectApp.Canvas.height,e.get("y")+100))},u.prototype.resetLines=function(){var e=[],t=this.polygon.get("points").at(this.polygon.get("points").length-2),n=this.polygon.get("points").first(),r=transectApp.LinesCollection.findWhere({point1:t,point2:n})||transectApp.LinesCollection.findWhere({point1:n,point2:t});r!==undefined&&r.get("polygons").length<2&&r.destroy(),t=this.polygon.get("points").at(this.polygon.get("points").length-2),n=this.polygon.get("points").last();var i=transectApp.LinesCollection.findWhere({point1:t,point2:n})||transectApp.LinesCollection.findWhere({point1:n,point2:t})||new s({},t,n);i.get("polygons").add(this.polygon),t=this.polygon.get("points").last(),n=this.polygon.get("points").first();var o=transectApp.LinesCollection.findWhere({point1:t,point2:n})||transectApp.LinesCollection.findWhere({point1:n,point2:t})||new s({},t,n);o.get("polygons").add(this.polygon),this.polygon.get("lines").add([i,o]),this.renderPolygonElement(),this.setRenderFill(),PointsSet.toFront()},u.prototype.addLineToPolygon=function(e){transectApp.LinesCollection.add(e);var t=new n(e);this.linesSet.push(t.element),this.$linesList.append(t.el)},u.prototype.resetPolygonLines=function(){this.polygon.get("lines").each(this.addLineToPolygon,this)},u.prototype.resetPolygonPoints=function(){this.polygon.get("points").each(this.addPointToPolygon,this)},u.prototype.addPoint=function(e){if(!this.polygon.get("draw"))return;var t=transectApp.PointsCollection.findWhere({x:e.offsetX,y:e.offsetY})||new r({x:e.offsetX,y:e.offsetY});if(t.get("transect")===null||t.get("zone")===null){t.destroy();return}this.polygon.get("points").add(t)},u.prototype.setRenderFill=function(){if(this.element===undefined)return;this.element.attr({opacity:.5,fill:transectApp.renderFill})},u.prototype.setPolygonFill=function(){if(this.element===undefined)return;var e=this.polygon.get("patternName"),t=e?"url('/pattern_manager/patterns/"+tscApp.PATTERNS[e]+"')":transectApp.polygonFill;this.element.attr({fill:t}),this.element.attr({opacity:.8,fill:t});var n=t+" no-repeat";this.$patternImage.css("background",n)},u.prototype.toggleEditStatus=function(){if(this.element===undefined)return;this.polygon.get("edit")?(this.$polygonForm.removeClass("hide"),this.$polygonData.addClass("hide"),this.$togglePolygon.removeClass("hide-data"),this.$togglePolygon.addClass("show-data")):(this.$polygonForm.addClass("hide"),this.$polygonData.removeClass("hide"),this.$togglePolygon.removeClass("show-data"),this.$togglePolygon.addClass("hide-data"))},u.prototype.getConvexHull=function(){var e=[],t=this.polygon.get("points").toArray();t.sort(sortPointX),t.sort(sortPointY);var n=chainHull_2D(t,t.length,e);_.invoke(this.polygon.get("points").toArray(),"destroy"),this.polygon.get("points").reset(e)},u.prototype.getPath=function(){var e="M",t=this;return this.polygon.get("points").each(function(n,r,i){if(r==0)e+=n.get("x")+","+n.get("y");else{var o=t.polygon.get("lines").findWhere({point1:i[r-1],point2:n});if(o!==undefined)e+=o.getPath();else{o=t.polygon.get("lines").findWhere({point1:n,point2:i[r-1]});if(o!==undefined){var u=new s({},i[r-1],n);e+=u.getPathFromPattern(o.get("pattern")),u.destroy()}}if(r>0&&r===i.length-1){o=t.polygon.get("lines").findWhere({point1:n,point2:i[0]});if(o!==undefined)e+=o.getPath();else{o=t.polygon.get("lines").findWhere({point1:i[0],point2:n});if(o!==undefined){var u=new s({},n,i[0]);e+=u.getStraightPath(),u.destroy()}}}}}),e},u.prototype.renderPolygonElement=function(){this.element!==undefined&&this.element.remove(),this.element=transectApp.Canvas.path(this.getPath()),this.element.hover(this.onMouseOver.bind(this),this.onMouseOut.bind(this)),this.moveToBottom(),this.renderTooltip(),this.setRenderMode()},u.prototype.renderTooltip=function(){$(this.element.node).qtip({content:{text:this.polygon.get("name")+"【"+this.polygon.get("patternName")+"】"},position:{my:"bottom left",target:"mouse"}})},u.prototype.onMouseOver=function(){if(!this.element)return;this.glow!==undefined&&this.glow.remove(),this.glow=this.element.glow({color:transectApp.glowColor,width:20}),this.glow.show(),this.$el.addClass("hover")},u.prototype.onMouseOut=function(){this.glow!==undefined&&this.glow.hide(),this.$el.removeClass("hover")},u.prototype.moveToBottom=function(){this.element.toBack(),transectApp.transectImage!==undefined&&transectApp.transectImage.toBack()},u.prototype.togglePolygonForm=function(){this.polygon.set({edit:!this.polygon.get("edit")})},u.prototype.showList=function(e){this.$(".polygon-settings").removeClass("active");var t="."+e.target.getAttribute("href").slice(1)+"-tab";this.$(t).addClass("active")},u.prototype.delete=function(){this.element!==undefined&&this.element.remove(),this.linesSet!==undefined&&this.linesSet.remove(),this.pointsSet!==undefined&&this.pointsSet.remove(),this.glow!==undefined&&this.glow.remove(),this.$el.remove(),this.remove()},u.prototype.destroy=function(){this.polygon.destroy()},u.prototype.updatePolygon=function(e){e.keyCode==13&&this.togglePolygonForm();var t=this.$polygonName.value;this.polygon.set({name:t})},u.prototype.setRenderMode=function(){this.polygon.get("draw")?this.setRenderFill():this.setPolygonFill()},u}),define("polygonsView",["baseView","polygonView","polygon"],function(e,t,n){var r=e.extend({el:"#polygons-list",classname:"PolygonsView"});return r.prototype.template=new EJS({url:"/commons/ejs/data_tbl.ejs"}),r.prototype.initialize=function(){CurrentPolygon=null,this.polygonsCollection=transectApp.PolygonsCollection,this.enPolygons=!1,this.render(),this.listenToActionEvents(),this.listenTo(this.polygonsCollection,"add",this.addPolygon.bind(this)),$('a[href="#new-polygon"]').click(this.createPolygon.bind(this))},r.prototype.render=function(){this.$el.html(this.template.render({name:"Polygons"})),this.$polygonsList=this.$(".data-list"),this.renderPolygons()},r.prototype.renderPolygons=function(){this.polygonsCollection.each(this.addPolygon.bind(this))},r.prototype.listenToActionEvents=function(){},r.prototype.addPolygon=function(e){var n=new t(e);this.$polygonsList.append(n.el)},r.prototype.togglePolygons=function(){$("a[href='#add-polygon']").parent().hasClass("active")?($("a[href='#add-polygon']").parent().removeClass("active"),this.enPolygons=!1):($("a[href='#add-polygon']").parent().addClass("active"),this.enPolygons=!0)},r.prototype.createPolygon=function(){if(!this.enPolygons)return;this.checkAndDeleteCurrentPolygon(),this.disableAllPolygons(),transectApp.CurrentPolygon=new n,this.polygonsCollection.add(transectApp.CurrentPolygon),this.disableAllPolygons(),transectApp.CurrentPolygon.set({draw:!0})},r.prototype.checkAndDeleteCurrentPolygon=function(){transectApp.CurrentPolygon&&(transectApp.CurrentPolygon.get("points").length<3?transectApp.CurrentPolygon.destroy():transectApp.CurrentPolygon.set({draw:!1}))},r.prototype.disableAllPolygons=function(){this.polygonsCollection.each(function(e){e.set("draw",!1)})},r}),define("transectText",["baseModel"],function(e){var t=e.extend({classname:"TransectText",constructor:function(t,n){var r=[{edit:!1,text:t.text||_.uniqueId("Text "),x:t.x?parseInt(t.x):0,y:t.y?parseInt(t.y):0,age:0,relativeX:null,relativeY:null,transect:null,zone:null,settings:new Settings}];e.apply(this,r)}});return t.prototype.initialize=function(){this.updateTransectAndZone()},t.prototype.updateTransectAndZone=function(){var e=transectApp.ZonesCollection.getZoneForY(this.get("y")),t=transectApp.TransectsCollection.getTransectForX(this.get("x"));e!==null&&t!==null&&(this.set({transect:t,zone:e}),this.updateRelativeCoordinates())},t.prototype.updateRelativeCoordinates=function(e){this.set({relativeX:this.get("transect").getRelativeX(this.get("x")),relativeY:this.get("zone").getRelativeY(this.get("y")),age:this.get("zone").getAbsoluteAge(this.get("y"))})},t}),define("transectTexts",["baseCollection","transectText"],function(e,t){var n=e.extend({classname:"TransectTexts",model:t});return n.prototype.updateTransectTexts=function(){return this.each(function(e){e.updateTransectAndZone()}),!0},n}),define("exporter",["point","points","line","lines","transects","transectTexts"],function(e,t,n,r,i,s){var o=function(){this.PRECISION=transectApp.precision,this.STEPS=transectApp.steps};return o.prototype.initialize=function(){var e=this;e.transectsData={},transectApp.TransectsCollection.each(function(n){e.transectsData[n.get("id")]={data:n,polygons:[],points:new t,texts:new s,matrixPositions:[],matrixAges:[],matrix:{}}}),e.wellsData={},transectApp.TransectWellsCollection.each(function(t){e.wellsData[t.get("id")]={data:t,referencePoints:[]}})},o.prototype.export=function(){this.polygons=transectApp.PolygonsCollection,this.transects=transectApp.TransectsCollection,this.initialize(),this.processData(),this.sortData()},o.prototype.sortData=function(){var e=this;for(var t in e.transectsData)e.sortTransectsData(e.transectsData[t]);for(var t in e.wellsData)e.sortWellsData(e.wellsData[t])},o.prototype.sortTransectsData=function(e){e.matrixPositions=_.uniq(e.matrixPositions),e.matrixAges=_.uniq(e.matrixAges),e.matrixPositions=_.sortBy(e.matrixPositions,function(e){return parseInt(e)}),e.matrixAges=_.sortBy(e.matrixAges,function(e){return parseFloat(e)})},o.prototype.sortWellsData=function(e){e.referencePoints=_.sortBy(e.referencePoints,function(e){return e.point.get("age")})},o.prototype.processData=function(){this.polygons.each(this.processPolygon.bind(this))},o.prototype.processPolygon=function(e){var t=this.getUnderlyingTransects(e);this.slicePolygon(e,t)},o.prototype.getUnderlyingTransects=function(e){var t=this,n=new i,r=[];e.get("points").each(function(e){var n=e.get("transect"),i=t.transects.indexOf(n);r=_.union(r,i)});var s=_.min(r),o=_.max(r);for(var u=s;u<=o;u++)n.add(t.transects.at(u));return n},o.prototype.slicePolygon=function(e,n){var i=this,s=n.length,o=[e.get("points")];for(var u=0;u<n.length;u++){var a=n.at(u),f=a.get("id"),l=o.pop(),c={name:e.get("name"),pattern:e.get("patternName"),points:new t,lines:new r},h=i.getLineSegmentForWell(a.get("wellRight")).getPolyKPointsArray();if(u!==s-1){var p=l.getPolyKPointsArray();PolyK.GetArea(p)>0&&(p=PolyK.Reverse(p));var d=PolyK.Slice(p,h[0],h[1],h[2],h[3]),d=i.getPolygonsFromPolyKPolygonsArray(d);d.forEach(function(e){o.push(e)}),l=d[0]}c.points.add(l.toArray());var v=i.generatePolygonLines(l,e);c.lines.add(v.toArray()),i.updatePointsOnWell(a.get("wellLeft"),v,e),u==s-1&&i.updatePointsOnWell(a.get("wellRight"),v,e),i.transectsData[a.get("id")].points.add(l),i.transectsData[a.get("id")].polygons.push(c),i.updateTransectMatrix(a,l)}},o.prototype.updateTransectMatrix=function(e,t){var n=this,r=n.transectsData[e.get("id")].matrix,i=n.transectsData[e.get("id")].matrixAges,s=n.transectsData[e.get("id")].matrixPositions;t.each(function(t){var o=t.get("age"),u=n.PRECISION*Math.round(t.get("relativeX")*100/n.PRECISION),a=t.get("transect");a!==e&&(a.get("wellLeft")===e.get("wellRight")?u=100:u=0),o in r||(r[String(o)]={}),i.indexOf(o)<0&&i.push(o),s.indexOf(o)<0&&s.push(u),r[String(o)][String(u)]!==undefined?t.set({name:r[String(o)][String(u)]}):r[String(o)][String(u)]=t.get("name")})},o.prototype.updatePointsOnWell=function(e,t,n){var r=this;t.each(function(t){r.isCloseToWell(e,t)&&(t.get("point1").get("y")<t.get("point2").get("y")?(r.wellsData[e.get("id")].referencePoints.push({point:t.get("point1"),pattern:"TOP"}),r.wellsData[e.get("id")].referencePoints.push({point:t.get("point2"),pattern:n.get("patternName")||"None",name:n.get("name")})):(r.wellsData[e.get("id")].referencePoints.push({point:t.get("point2"),pattern:"TOP"}),r.wellsData[e.get("id")].referencePoints.push({point:t.get("point1"),pattern:n.get("patternName")||"None",name:n.get("name")})))})},o.prototype.isCloseToWell=function(e,t){var n=this,r=n.getLineSegmentForWell(e),i=r.getPolyKPointsArray(),s=5,o=[i[0]+s,i[1],i[0]-s,i[1],i[2]-s,i[3],i[2]+s,i[3]],u=t.getPolyKPointsArray();return PolyK.ContainsPoint(o,u[0],u[1])&&PolyK.ContainsPoint(o,u[2],u[3])?!0:!1},o.prototype.generatePolygonLines=function(e,t){var i=this,s=new r;e.each(function(r,o){if(o>0){var u=new n({},e.at(o-1),r);i.updateLineStyleFromOriginalPolygon(u,t),s.add(u)}});var o=new n({},e.last(),e.first());return i.updateLineStyleFromOriginalPolygon(o,t),s.add(o),s},o.prototype.updateLineStyleFromOriginalPolygon=function(e,t){var n=this,r=t.get("lines");for(var i=0;i<r.length;i++){var s=r.at(i);if(s.coincides(e)){e.set({pattern:s.get("pattern")});break}}},o.prototype.getLineSegmentForWell=function(t){return new n({},new e({x:t.get("x"),y:0}),new e({x:t.get("x"),y:transectApp.Canvas.height}))},o.prototype.getPolygonsFromPolyKPolygonsArray=function(e){var t=[];for(var n in e)t.push(this.getPointsFromPolykPolygon(e[n]));return t},o.prototype.getPointsFromPolykPolygon=function(n){var r=new t;for(var i=0;i<n.length;i+=2){var s=new e({x:n[i],y:n[i+1]});r.add(s)}return r},o.prototype.getText=function(){var e=this,t="";for(var n=0;n<e.transects.length;n++){var r=e.transects.at(n);if(n==0){var i=r.get("wellLeft").id;t+=e.getWellOutputText(i)}t+=e.getTransectOutputText(r.id);var s=r.get("wellRight").id;t+=e.getWellOutputText(s)}return t},o.prototype.getTransectOutputText=function(e){var t=this,n=t.transectsData[e],r="\n\n";return r+=n.data.get("name")+"	",r+="transect	",r+=n.data.get("width")+"	",r+=CssToTscColor(n.data.get("settings").get("backgroundColor"))+"	",r+=n.data.get("status")+"	",r+=t.getTransectMatrixText(e),r+=t.getTransectPolygonsListText(e),r},o.prototype.getTransectMatrixText=function(e){var t=this,n=t.transectsData[e],r=n.matrixAges,i=n.matrixPositions,s="\n		";for(var o=0;o<i.length;o++)s+=i[o]+"	";for(var o=0;o<r.length;o++){var u=String(r[o]);s+="\n	",s+=u+"	";for(var a=0;a<i.length;a++){var f=i[a];s+=(n.matrix[String(u)][String(f)]||"")+"	"}}return s},o.prototype.getTransectPolygonsListText=function(e){var t=this,n=t.transectsData[e],r="";for(var i=0;i<n.polygons.length;i++){var s=n.polygons[i];r+="\n",r+="POLYGON	",r+="pattern:"+(s.pattern||"None")+"	";for(var o=0;o<s.lines.length;o++){var u=s.lines.at(o),a=u.get("point1"),f=u.get("point2"),l=u.get("pattern");r+="\n	",r+=a.get("name").substring(1),l!=="default"&&(r+="\n		",r+=l)}}return r},o.prototype.getWellOutputText=function(e){var t=this,n=t.wellsData[e],r="\n\n";r+=n.data.get("name")+"	",r+="facies	",r+=n.data.get("width")+"	",r+=CssToTscColor(n.data.get("settings").get("backgroundColor"))+"	",r+"\n";for(var i in n.referencePoints)r+="\n",r+="	",r+=(n.referencePoints[i].pattern||"None")+"	",r+=(n.referencePoints[i].name||"")+"	",r+=n.referencePoints[i].point.get("age")+"	";return r},o}),define("dataExportView",["baseView","exporter"],function(e,t){var n=e.extend({el:"#export-panel",classname:"DataExportView",events:{'click a[href="#show-raw"]':"toggleDataView",'click a[href="#show-table"]':"toggleDataView"}});return n.prototype.template=new EJS({url:"/transect_maker/ejs/data_export_panel.ejs"}),n.prototype.transectWellDataTemplate=new EJS({url:"/transect_maker/ejs/wells_data.ejs"}),n.prototype.transectDataLayout=new EJS({url:"/transect_maker/ejs/transect_data_layout.ejs"}),n.prototype.initialize=function(){this.markers=transectApp.TransectMarkersCollection,this.polygons=transectApp.PolygonsCollection,this.render(),this.$exportPanel=$("#export-panel"),this.$canvas=$("#canvas")},n.prototype.render=function(){if(!this.isAgeSet()){alert("Please set the ages for time lines!");return}this.exporter=new t,this.transects=transectApp.TransectsCollection,this.$el.html(this.template.render({transects:this.transects.toJSON()})),this.$dataTable=this.$(".data-table"),this.$dataRaw=this.$(".data-raw"),this.$textData=this.$("textarea[name*=transect-data]")[0],this.$showTable=this.$('a[href="#show-table"]'),this.$showRaw=this.$('a[href="#show-raw"]'),this.$showData=this.$("a.show-data"),this.exporter.export(),this.renderWellsData(),this.renderTransectsData(),this.renderDataInText()},n.prototype.isAgeSet=function(){for(var e=0;e<this.markers.length;e++){var t=this.markers.at(e);if(t.get("age")==null)return!1}return!0},n.prototype.renderWellsData=function(){var e=this.exporter.wellsData;for(var t in e)this.$("#"+t).html(this.transectWellDataTemplate.render(e[t]))},n.prototype.renderTransectsData=function(){var e=this.exporter.transectsData;for(var t in e)this.$("#"+t).html(this.transectDataLayout.render(e[t]))},n.prototype.renderDataInText=function(){this.$textData.value=this.exporter.getText()},n.prototype.toggleExportView=function(e){$("a[href='#export-data']").parent().hasClass("active")?($("a[href='#export-data']").parent().removeClass("active"),this.$exportPanel.removeClass("active"),this.$canvas.removeClass("hide")):($("a[href='#export-data']").parent().addClass("active"),this.$exportPanel.addClass("active"),this.$canvas.addClass("hide")),this.render()},n.prototype.toggleDataView=function(e){this.$dataTable.toggleClass("hide"),this.$dataRaw.toggleClass("hide"),this.$showTable.toggleClass("alert"),this.$showRaw.toggleClass("alert")},n}),define("transectImage",["baseModel"],function(e){var t=e.extend({classname:"TransectImage",constructor:function(t,n){var r=[{x:"x"in t?t.x:0,y:"y"in t?t.y:0,url:"url"in t?t.url:null}];e.apply(this,r)}});return t.prototype.initialize=function(e){this.set({width:2388,height:1548})},t});var transectApp=transectApp||{};define("transectAppView",["baseView","transectsView","transectImageView","transectMarkersView","transectWellsView","transectTextsView","zonesView","polygonsView","dataExportView","transectImage"],function(e,t,n,r,i,s,o,u,a,f){var l=e.extend({el:".container",classname:"TransectAppView",events:{"click a.transect-settings":"showSettings","click a.transect-tools":"enableTool","click a.continue":"showCanvas"}});return l.prototype.initialize=function(){this.$introScreen=this.$("#intro-screen"),this.$canvas=this.$("#canvas"),transectApp.StatusBox=$(".status-box"),transectApp.Canvas=new Raphael(this.$canvas[0],this.width,this.height),PointsSet=transectApp.Canvas.set(),LinesSet=transectApp.Canvas.set(),PolygonsSet=transectApp.Canvas.set(),transectApp.CurrentPolygon=null,POLYGON_COLOR="#000000",this.x=10,this.y=10,this.width=2e3,this.height=2e3,this.render()},l.prototype.showCanvas=function(){this.$(canvas).removeClass("hide"),this.$introScreen.addClass("hide")},l.prototype.render=function(){this.transectsView=new t,this.transectMarkersView=new r,this.transectWellsView=new i,this.transectTextsView=new s,this.zonesView=new o,this.polygonsView=new u,this.dataExportView=new a,this.renderTransectImage()},l.prototype.renderTransectImage=function(){var e=new f({url:"/images/Scan2_CentralVulcan-page-001.gif",x:this.x,y:this.y}),t=new n(e)},l.prototype.showSettings=function(e){var t=e.target.getAttribute("href")+"-list";$(t).hasClass("active")?($(t).removeClass("active"),$(e.target).removeClass("active"),$(e.target).parent().removeClass("active"),this.$("#sections-panel").removeClass("active")):(this.$(".settings-content").removeClass("active"),this.$(".settings-links").removeClass("active"),this.$(".transect-settings").removeClass("active"),$(t).addClass("active"),$(e.target).addClass("active"),$(e.target).parent().addClass("active"),this.$("#sections-panel").addClass("active"))},l.prototype.showExportDataPanel=function(e){this.$exportPanel.hasClass("active")||this.dataExportView.render()},l.prototype.exportCanvasAsImage=function(){},l.prototype.enableTool=function(e){var t=e.target.getAttribute("href");if(t==="#new-polygon")return;this.transectMarkersView.enMarkers&&this.transectMarkersView.toggleMarkers(),this.transectWellsView.enWells&&this.transectWellsView.toggleWells(),this.transectTextsView.enTransectTexts&&this.transectTextsView.toggleTransectTexts(),this.polygonsView.enPolygons&&this.polygonsView.togglePolygons(),this.polygonsView.checkAndDeleteCurrentPolygon();switch(t){case"#add-marker":this.transectMarkersView.toggleMarkers();break;case"#add-well":this.transectWellsView.toggleWells();break;case"#add-transect-text":this.transectTextsView.toggleTransectTexts();break;case"#add-polygon":this.polygonsView.togglePolygons();break;case"#export-data":this.dataExportView.toggleExportView();break;default:}},l}),define("zones",["baseCollection","zone"],function(e,t){var n=e.extend({classname:"Zones",model:t});return n.prototype.getZoneForY=function(e){var t=null;return this.each(function(n){n.isYInsideZone(e)&&(t=n)}),t},n}),define("transectWells",["baseCollection","transectWell"],function(e,t){var n=e.extend({classname:"TransectWells",model:t});return n.prototype.comparator=function(e){return e.get("x")},n}),define("transectMarkers",["baseCollection","transectMarker"],function(e,t){var n=e.extend({classname:"TransectMarkers",model:t});return n.prototype.comparator=function(e){return e.get("y")},n}),requirejs.config({paths:{baseView:"/commons/js/views/base_view",transectImageView:"/transect_maker/js/views/transect_image_view",transectMarkersView:"/transect_maker/js/views/transect_markers_view",transectMarkerView:"/transect_maker/js/views/transect_marker_view",transectWellsView:"/transect_maker/js/views/transect_wells_view",transectWellView:"/transect_maker/js/views/transect_well_view",zoneView:"/transect_maker/js/views/zone_view",zonesView:"/transect_maker/js/views/zones_view",transectView:"/transect_maker/js/views/transect_view",transectsView:"/transect_maker/js/views/transects_view",pointView:"/transect_maker/js/views/point_view",lineView:"/transect_maker/js/views/line_view",polygonView:"/transect_maker/js/views/polygon_view",polygonsView:"/transect_maker/js/views/polygons_view",transectTextView:"/transect_maker/js/views/transect_text_view",transectTextsView:"/transect_maker/js/views/transect_texts_view",dataExportView:"/transect_maker/js/views/data_export_view",transectAppView:"/transect_maker/js/views/transect_app_view",baseModel:"/commons/js/models/base_model",settings:"/commons/js/models/settings",transectImage:"/transect_maker/js/models/transect_image",transectMarker:"/transect_maker/js/models/transect_marker",transectWell:"/transect_maker/js/models/transect_well",zone:"/transect_maker/js/models/zone",transect:"/transect_maker/js/models/transect",point:"/transect_maker/js/models/point",line:"/transect_maker/js/models/line",polygon:"/transect_maker/js/models/polygon",transectText:"/transect_maker/js/models/transect_text",baseCollection:"/commons/js/collections/base_collection",transectMarkers:"/transect_maker/js/collections/transect_markers",transectWells:"/transect_maker/js/collections/transect_wells",zones:"/transect_maker/js/collections/zones",transects:"/transect_maker/js/collections/transects",points:"/transect_maker/js/collections/points",lines:"/transect_maker/js/collections/lines",polygons:"/transect_maker/js/collections/polygons",transectTexts:"/transect_maker/js/collections/transect_texts",exporter:"/transect_maker/js/utils/exporter"},name:"transect-maker.0",out:"transect-maker-built.0"});var transectApp=transectApp||{};requirejs(["transectAppView","transects","transectTexts","polygons","lines","points","zones","transectWells","transectMarkers"],function(e,t,n,r,i,s,o,u,a){transectApp.TransectsCollection=new t,transectApp.TransectTextsCollection=new n,transectApp.PolygonsCollection=new r,transectApp.LinesCollection=new i,transectApp.PointsCollection=new s,transectApp.ZonesCollection=new o,transectApp.TransectWellsCollection=new u,transectApp.TransectMarkersCollection=new a;var f=new e}),define("transect_maker/js/transect_app",function(){});